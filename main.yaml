- name: K3s master install
  hosts: all
  become: true
  gather_facts: no
  tasks:

    - name: mkdir /var/lib/rancher/k3s/agent/images/
      ansible.builtin.file:
        path: /var/lib/rancher/k3s/agent/images/
        state: directory
        mode: '0755'

    - name: Set k3s Executable
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/k3s_files/k3s"
        dest: /usr/local/bin/
        mode: '0755'

    - name: Set images
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/k3s_files/k3s-airgap-images-amd64.tar"
        dest: /var/lib/rancher/k3s/agent/images/

    - name: Set install script
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/k3s_files/install.sh"
        dest: /home/
        mode: '0755'

    - name: Get file for k3s-selinux
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/k3s_files/k3s-selinux-1.4-1.el9.noarch.rpm"
        dest: /home/

    - name: install k3s-selinux
      ansible.builtin.yum:
        name: /home/k3s-selinux-1.4-1.el9.noarch.rpm
        disable_gpg_check: True
        disablerepo: baseos,appstream,extras,extras-common
        state: present

    - name: Execute ./install.sh
      ansible.builtin.shell: >-
        INSTALL_K3S_SKIP_DOWNLOAD=true /home/./install.sh

    - name: Get node token
      ansible.builtin.command: cat /var/lib/rancher/k3s/server/node-token
      changed_when: false
      register: node_token_output

    - name: Set node_token fact.
      ansible.builtin.set_fact:
        node_token: "{{ node_token_output.stdout_lines[0] }}"

- name: Disable firewalld
  hosts: all
  become: true
  gather_facts: false
  tasks:

    - name: Stop firewalld service
      ansible.builtin.service:
        name: firewalld
        state: stopped

- name: Helm install for master server
  hosts: all
  gather_facts: no
  tasks:

    - name: copy Helm binary to desired destination
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/helm/linux-amd64/helm"
        dest: /usr/local/bin/
        mode: '0755'

    - name: export kubeconfig
      ansible.builtin.shell: >-
        export KUBECONFIG=/etc/rancher/k3s/k3s.yaml

- name: K3s private registry configuration
  hosts: all
  gather_facts: no
  become: true
  tasks:

    - name: Create /etc/rancher/k3s/ directory on all nodes
      ansible.builtin.file:
        path: /etc/rancher/k3s/
        state: directory
        mode: '0755'

    - name: Create /etc/rancher/k3s/registries.yaml on all nodes
      copy:
        content: |
          mirrors:
            harbor.core.local:
              endpoint:
                - "http://harbor.core.local:80"
          configs:
            "harbor.core.local":
              tls:
                insecure_skip_verify: true
        dest: /etc/rancher/k3s/registries.yaml

- name: Restart K3s master node service
  hosts: all
  gather_facts: no
  become: true
  tasks:

    - name: Restart K3s service
      ansible.builtin.systemd:
        state: restarted
        daemon_reload: true
        name: k3s

        